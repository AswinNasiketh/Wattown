#:kivy 1.11.1

<MainScreenManager>
    SelectModeScreen:
    InteractiveModeScreen:
    CycleModeConfigScreen:
    CycleModeScreen:

<SelectModeScreen>
    name: 'selectMode'
    Label:
        text: 'Select Mode to Run'
    GridLayout:
        cols: 3
        Button:
            text: 'Interactive Mode'
            font_size: 20
            on_release: root.startInteractiveMode()
        Button:
            text: 'Cycle Mode'
            font_size: 20
            on_release: root.configureCycleMode()
        Button:
            text: 'Substation Mode'
            font_size: 20

<InteractiveModeScreen>
    name: 'interactiveMode'
    BoxLayout:
        orientation: 'vertical'
        Label:
            text: 'Interactive Mode'
        GridLayout:
            cols: 2
            Label:
                text: 'Solar Panel Status:'
            Label:
                id: solarPanelStatusLabel
                text: root.solarPanelStatus
            Label:
                text: 'Windmills Being Blown: '
            Label:
                id:numWindmillsOnLabel
                text: str(root.numWindmillsOn)
            Label:
                text: 'City Powered (%)'
            Label:
                id:cityPoweredLabel
                text: str(root.cityPowered)
            Label:
                text: 'Energy Stored (%)'
            Label:
                id:energyStoredLabel
                text: str(root.storedEnergy)
        Button:
            text:'Stop'
            font_size: 30
            on_release: root.stopInteractiveMode()
        # Button:
        #     text: '+'
        #     font_size:30
        #     on_release: root.incrementProperties()

<CycleModeConfigScreen>
    name: 'cycleModeConfig'
    BoxLayout:
        orientation: 'vertical'
        Label:
            text: 'Cycle Mode Configuration'
        GridLayout:
            cols: 3
            Label:
                text: 'Wind Present?'
            ToggleButton:
                id: windPresentYesButton
                text: 'Yes'
                group: 'windPresent'
                state: 'down'
                allow_no_selection: False
            ToggleButton:
                text: 'No'
                group: 'windPresent'
                allow_no_selection: False        
        GridLayout:
            cols: 3
            Label:
                text: 'Randomise Wind?'
            ToggleButton:
                id: randomiseWindYesButton
                text: 'Yes'
                group: 'randomiseWind'
                state: 'down'
                allow_no_selection: False
                on_press: root.toggleWindControls(False)
            ToggleButton:
                text: 'No'
                group: 'randomiseWind'
                allow_no_selection: False
                on_press: root.toggleWindControls(True)
        GridLayout:
            cols: 4
            Label:
                text: 'Wind Amplitude:'
            Label:
                text: str(root.windAmplitude)
            Button:
                id: windAmpPlusButton
                text: '+'
                on_release: root.incrementWindAmplitude()
                disabled : True
            Button:
                id: windAmpMinusButton
                text: '-'
                on_release: root.decrementWindAmplitude()
                disabled : True
        GridLayout:
            cols: 4
            Label:
                text: 'Wind toggles every (hours):'
            Label:
                text: str(root.windSwitchingPeriod)
            Button:
                id: windTogglePlusButton
                text: '+'
                on_release: root.incrementSwitchingPeriod()
                disabled : True
            Button:
                id: windToggleMinusButton
                text: '-'
                on_release: root.decrementSwitchingPeriod()
                disabled : True
        GridLayout:
            cols: 3
            Label:
                text: 'Sunny/Cloudy Day?'
            ToggleButton:
                id: sunnyButton
                text: 'Sunny'
                group: 'cloudCover'
                state: 'down'
                allow_no_selection: False
            ToggleButton:
                text: 'Cloudy'
                group: 'cloudCover'
                allow_no_selection: False
        GridLayout:
            cols: 4
            Label:
                text: 'Daylight Hours:'
            Label:
                text: str(root.daylightHours)
            Button:
                text: '+'
                on_release: root.incrementDaylightHours()
            Button:
                text: '-'
                on_release: root.decrementDaylightHours()
        GridLayout:
            cols: 4
            Label:
                text: 'Days to Simulate:'
            Label:
                text: str(root.numDaysToSimulate)
            Button:
                text: '+'
                on_release: root.numDaysToSimulate += 1
            Button:
                text: '-'
                on_release: root.decrementDaysToSimulate()
        GridLayout:
            cols: 2
            Button:
                text: 'Back'
                on_release: app.root.current = 'selectMode'
            Button:
                text: 'Start'
                on_release: root.startCycleMode()

<CycleModeScreen>
    name: 'cycleMode'
    BoxLayout:
        orientation: 'vertical'
        Label:
            text: 'Cycle Mode'

        GridLayout:
            cols: 2
            Label:
                text: 'Wind Power:'
            Label:
                text: str(root.windPower) + ' GW' 
                color: [0,1,0,1]#r, g, b, a
            Label:
                text: 'Solar Power:'
            Label:
                text: str(root.solarPower) + ' GW' 
                color: [0,1,0,1] 
            Label:                
                text: 'Hydroelectric Power:'
            Label:
                id: hydroPowerValueLabel
                text: str(root.hydroPower) + ' GW' 
        GridLayout:
            cols: 2
            Label:
                text: 'City Consumption:'
            Label:
                text: str(root.consumption) + ' GW'
                color: [1, 0, 0, 1]
            Label:
                text: 'Total Renewable Supply:'
            Label:
                id: renewableSupplyLabel
                text: str(root.renewableSupply) + ' GW' 
            Label:
                text: 'Renewable Surplus/Shortage:'
            Label:
                id: surplusValueLabel
                text: str(root.renewableSurplus) + ' GW' 
        GridLayout:
            cols: 2
            Label:
                text: 'Battery Energy:'
            Label:
                text: str(root.batteryEnergy) + ' GWh' 
            Label:
                text: 'Reservoir Energy:'
            Label:
                text: str(root.hydroEnergy) + ' GWh'
        
        GridLayout:
            cols: 2
            Label:
                text: 'Day:'
            Label:
                text: str(root.day)
            Label:
                text: 'Hour:'
            Label:
                text: str(root.hour)

        Button:
            text: 'Stop/Finish'
            on_release: root.stopCycleMode()
        
